config:
  verbosity: 4
  threads: 100
  task_timeout: 15
  loop: 10

default:
  http: &http
    followRedirects: false
    headers:
      user-agent: Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0
      accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
      accept-language: en-US,en;q=0.5
      accept-encoding: gzip, deflate
    proxy:
      type: socks5
      source: ./test/proxies.txt

vars:
  host: https://www.example.com

inputs:
  - source: ./test/in.csv
    type: csv
  - source: ./test/users.txt
    type: txt
    as: users

output:
  adapter: csv
  source: ./test/testout.csv

before:
  - get:
      url: http://icanhazip.com
  - extract:
      regex: '.*'
      as: ip

tasks:
  - get:
      <<: *http
      url: '{{ .Vars.host }}'
      success:
        when: '{{ eq .Page.Status 200 }}'
  - extract:
      regex: 'csrf_token="(.*)"'
      as: csrf_token
  - post:
      <<: *http
      url: '{{ .Vars.host }}/login'
      headers:
        referer: http://www.example.com
      params:
        email: $login
        password: $password
      cookies:
        _token: $csrf_token
      success:
        when: '{{ eq .Page.Status 301 }}'
      abort:
        when: '{{ eq .Page.Status 500 }}'
      retry:
        when: '{{ .Page.Url | contains "/banned" }}'
        with: '.Proxy.Next'
        limit: 5
      fail:
        when: 'match .Page.Body "User .* not found"'
  - extract:
      element: "div.user>span.id"
      as: user_id
  - get:
      <<: *http
      url: https://www.example.com/account
      success: 'eq .Page.Title "Account"'

finally:
  - post:
      url: http://www.example.com/webhook/success/{{.Uid}}
      when: '$.Status.Success'

